name: My_CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
       -develop

jobs:
  staging-job-1:
    runs-on: self-hosted
    environment: staging
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run a one-line script
        run: echo Hello, World
        
      # Push to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build docker image
        run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/task1:latest

      - name: Push docker image to Docker Hub (staging)
        run: docker push ${{ secrets.DOCKER_USERNAME }}/task1:latest

  production-job-1:
    runs-on: self-hosted
    environment: production
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup AWS ECR Details
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push the tagged docker image to Amazon ECR (production)
        env:
          ECR_REGISTRY: public.ecr.aws/y8h2p9f1
          ECR_REPOSITORY: github_actions_priya
          IMAGE_TAG: latest
        run: 
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/y8h2p9f1
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

